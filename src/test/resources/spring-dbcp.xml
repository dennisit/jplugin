<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 配置过滤 -->
		<property name="filters" value="stat" />
		<!-- 配置初始化大小 -->
		<property name="initialSize" value="200" />
		<!-- 配置初始化最大 连接数 -->
		<property name="maxActive" value="10" />
		<!-- 配置初始化最小连接数 -->
		<property name="minIdle" value="5" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 检测连接是否有效的SQL -->
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- MySQL不需要做PSCache,只有Oracle/DB2/SQL Server之类支持游标的数据库才需要配置成true
        <property name="poolPreparedStatements" value="true" />
         -->
		<!-- 如果是Oracle/DB2/SQL Server之类支持游标的数据库需要加上一下配置
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
        -->
	</bean>


	<bean id="dataSourceWrite" parent="baseDataSource">
		<property name="driverClassName" value="${mysql.jdbc.driver}" />
        <property name="url" value="${mysql.jdbc.url}"/>
        <property name="username" value="${mysql.jdbc.username}"/>
        <property name="password" value="${mysql.jdbc.password}"/>
    </bean>

	<bean id="dataSourceRead" parent="baseDataSource">
		<property name="driverClassName" value="${mysql.jdbc.driver}" />
		<property name="url" value="${mysql.jdbc.url}"/>
		<property name="username" value="${mysql.jdbc.username}"/>
		<property name="password" value="${mysql.jdbc.password}"/>
	</bean>

	
	<bean id="readWriteDataSources" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="WRITE"  value-ref="dataSourceWrite" />
				<entry key="READ" value-ref="dataSourceRead" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="mysqlWriteReadDataSource" class="com.plugin.ibatis.datasource.RoutingDataSource">
		<property name="defaultTargetDataSource" ref="dataSourceWrite" />
		<property name="targetDataSources" ref="readWriteDataSources" />
		<property name="readDataSourceKeys">
			<list>
				<value>READ</value>
			</list>
		</property>
	</bean>

	<bean id="mysqlSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap/sqlmap-config.xml"/>
		<property name="dataSource" ref="mysqlWriteReadDataSource"></property>
	</bean>

	<bean id="exModelDaoImpl" class="com.plugin.dao.ExModelDaoImpl">
		<property name="sqlMapClient" ref="mysqlSqlMapClient" />
	</bean>


</beans>